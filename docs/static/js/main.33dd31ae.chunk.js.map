{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","PropsType","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","catch","console","log","useFetchGifs","img","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,0BAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,YAuB/BZ,EAAYe,UAAW,CACnBd,c,OAAee,EAAUC,KAAKC,YAGnBlB,QClCFmB,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCNJK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEAG,MAAOR,GAFP,cAEbS,EAFa,gBAGKA,EAAKC,OAHV,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,YAA2B,IAAxBf,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOe,EAAY,EAAZA,OAChC,MAAO,CACHhB,GAAIA,EACJC,MAAOA,EACPC,IAAG,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBf,QATnB,kBAaZY,GAbY,4CAAH,sDCGPI,EAAU,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdzB,mBAAS,CAC/B+B,KAAM,GACNM,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACNhB,EAASC,GACJgB,MAAM,SAAAC,GAEHH,EAAS,CACLR,KAAMW,EACNL,SAAS,OAIhBM,MAAMC,QAAQC,OACpB,CAAEpB,IAEEa,EDhB0BQ,CAAcrB,GAAlCS,EAFwB,EAE7BH,KAAaM,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIhB,UAAU,yCAAd,IAAyDI,EAAzD,KAEEY,GAAW,uBAAGhB,UAAU,qCAAb,WAEb,yBAAKA,UAAU,aAEHa,EAAOD,KAAK,SAAAc,GAAG,OACX,kBAAC,EAAD,eACIC,IAAMD,EAAI7B,IACL6B,UEkBtBE,EAjCM,WAAO,IAAD,EAEajD,mBAAS,CAAC,cAFvB,mBAEhBkD,EAFgB,KAEJnD,EAFI,KASvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAKQ,4BAEQmD,EAAWjB,KAAK,SAACR,EAAU0B,GAAX,OACZ,kBAAC,EAAD,CACIH,IAAMvB,EACNA,SAAWA,UCtB/C2B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.33dd31ae.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [ inputValue, ...cats ]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.PropsType ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInDown\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async ( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=chUpX3UQKLabWRrZAxI5V3XPIeF1v6KY`;\r\n    const resp = await fetch( url );\r\n    const { data } =  await resp.json();\r\n\r\n    const gifs = data.map(({ id, title, images }) =>{\r\n        return {\r\n            id: id,\r\n            title: title,\r\n            url: images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__zoomInDown\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__rollIn\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img =>(\r\n                            <GifGridItem\r\n                                key={ img.id }\r\n                                { ...img } \r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n            .catch(console.log);\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories([...categories, 'One Piece']);\r\n    //     setCategories(cats => [...cats, 'One Piece']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n            {\r\n                    <ol>\r\n                        {\r\n                            categories.map( (category, i) =>\r\n                                <GifGrid\r\n                                    key={ category } \r\n                                    category={ category } \r\n                                />\r\n                            )\r\n                        }\r\n                    </ol>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}